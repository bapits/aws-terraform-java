plugins {
  id 'java'
  id "org.sonarqube" version "3.4.0.2513"
  id 'jacoco'
}

group = 'com.bapits.labs.sample.aws'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
	maven {
	    url "https://plugins.gradle.org/m2/"
	}
  mavenCentral()
}

ext {
  appVersion = version

  springBootStarterVersion = '2.5.1'
  kotlinVersion = "1.4.32"
  log4jVersion = "2.17.1"
  jaxbVersion = "2.3.1"
  okHttp3Version = "4.9.1"
}

dependencies {

  //implementation "org.springframework.boot:spring-boot-starter:$springBootStarterVersion"
  implementation 'com.amazonaws:aws-java-sdk-core:1.12.52'
  implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
  implementation 'com.amazonaws:aws-lambda-java-events:3.9.0'
  implementation 'com.amazonaws:aws-java-sdk-s3:1.12.52'
  implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.80'

  implementation 'com.google.code.gson:gson:2.8.2'
  implementation 'commons-io:commons-io:2.8.0'
  implementation 'com.googlecode.json-simple:json-simple:1.1.1'
  implementation 'org.xmlunit:xmlunit-core:2.2.1'
  implementation 'org.xmlunit:xmlunit-matchers:2.2.1'

  implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
  implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"

  implementation 'com.squareup.okio:okio:2.10.0'
  implementation "com.squareup.okhttp3:okhttp:$okHttp3Version"

  // jaxb , https://stackoverflow.com/a/52502208/311420 , we keep different versions for less change in code
  implementation "javax.xml.bind:jaxb-api:$jaxbVersion"
  implementation "com.sun.xml.bind:jaxb-impl:$jaxbVersion"
  implementation "com.sun.xml.bind:jaxb-core:2.3.0.1"


  // for loading properties
  implementation 'org.aeonbits.owner:owner:1.0.12'


  implementation 'com.fasterxml.uuid:java-uuid-generator:4.0.1'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.2'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.2'

  //implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

  runtimeOnly "org.apache.logging.log4j:log4j-slf4j18-impl:$log4jVersion"
  runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'


  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'

  testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.1'
  testImplementation 'org.hamcrest:hamcrest-all:1.3'
  testImplementation 'com.jcabi:jcabi-xml:0.22.2'
  testImplementation 'com.amazonaws:aws-lambda-java-tests:1.0.2'
  testImplementation 'org.mockito:mockito-core:3.11.2'
  testImplementation 'com.github.stefanbirkner:system-lambda:1.2.0'

  //testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootStarterVersion"
}

jacoco {
  toolVersion = "0.8.5"
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

tasks['sonarqube'].dependsOn jacocoTestReport

test {
  useJUnitPlatform()
}


task buildZip(type: Zip) {
  from compileJava
  from processResources
  into('lib') {
    from configurations.runtimeClasspath
  }
  archiveName 'bap-aws-terraform-sample.zip'
}

// After `gradlew build` task is launched, the buildZip task will be launched.
build.finalizedBy(buildZip)
